name: Release

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: write

env:
  TAG: ${{ github.ref_name }}

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: üìë Create tag
      run: | 
        echo OUTPUT="$(git ls-remote --tags origin | grep ${TAG##*/})" >> $GITHUB_ENV

        if [[ -n "$OUTPUT" ]]; then
          echo NEW_TAG="${TAG##*/}-rc-`expr "${OUTPUT:0-1}" + 1`" >> $GITHUB_ENV
        else
          echo NEW_TAG="${TAG##*/}-rc-1" >> $GITHUB_ENV
        fi

        git tag $NEW_TAG
        git push origin --tags
      shell: bash

    - name: ‚öôÔ∏è Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    - name: ‚öôÔ∏è Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tomli-w --no-cache-dir

    - name: ‚úÖ Run Script
      env:
        NEW_TAG: ${{ env.NEW_TAG }}
      run: |
        python ./.github/python-library-rc.py

    - name: üöÄ Create release
      run: |
        gh release create $NEW_TAG \
            --repo="$GITHUB_REPOSITORY" \
            --title="$NEW_TAG" \
            --generate-notes
