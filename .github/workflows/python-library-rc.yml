name: Release

on:
  push:
    branches:
      - 'release/**'

permissions:
  contents: write

env:
  TAG: ${{ github.ref_name }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}

    - name: üìë Create tag
      run: |
        git ls-remote --tags origin | grep ${TAG##*/}
        echo _VERSION="$(git ls-remote --tags origin | grep ${TAG##*/})" >> $GITHUB_ENV

        if [[ -n "$_VERSION" ]]; then
          echo NEW_TAG="${TAG##*/}-rc-`expr "${_VERSION:0-1}" + 1`" >> $GITHUB_ENV
        else
          echo NEW_TAG="${TAG##*/}-rc-1" >> $GITHUB_ENV
        fi

        git tag $NEW_TAG
        git push origin --tags

        echo _VERSION $_VERSION
        echo tag $TAG
        echo new_tag $NEW_TAG
      shell: bash

    - name: ‚öôÔ∏è Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"

    # - name: ‚öôÔ∏è Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install tomli-w --no-cache-dir

    # - name: ‚úÖ Update version
    #   env:
    #     NEW_TAG: ${{ env.NEW_TAG }}
    #   run: |
    #     python ./.github/python-library-rc.py

    # - name: üìù Git Config
    #   run: |
    #     git config --global user.email bot@linuxprofile.com
    #     git config --global user.name üêß
    #   shell: bash

    # - name: üìù Git Process
    #   run: |
    #     if [[ `git status --porcelain` ]]; then
    #       git add --all
    #       git commit -a -m "Updated Version"
    #       git push origin HEAD:$TAG --force
    #     else
    #       echo "WARNING: No changes were detected. git commit push action aborted."
    #     fi
    #   shell: bash
    #   continue-on-error: true

    # - name: üöÄ Create release
    #   run: |
    #     gh release create $NEW_TAG \
    #         --repo="$GITHUB_REPOSITORY" \
    #         --title="$NEW_TAG" \
    #         --generate-notes
